// Generated using `moon info`, DON'T EDIT IT
package "illusory0x0/path"

// Values

// Errors
pub(all) suberror InvalidPathError {
  WinInvalidPath(start~ : Int, message~ : String)
  UnixInvalidPath(start~ : Int, message~ : String)
}

pub(all) suberror ParseError {
  WinParseError(start~ : Int)
  UnixParseError(start~ : Int)
}

// Types and methods
type Directory[Component]
fn[Component : Eq] Directory::equal(Self[Component], Self[Component]) -> Bool // from trait `Eq`
fn[Component : Hash] Directory::hash(Self[Component]) -> Int // from trait `Hash`
fn[Component : Hash] Directory::hash_combine(Self[Component], Hasher) -> Unit // from trait `Hash`
fn[T] Directory::iter(Self[T]) -> Iter[T]
fn[T] Directory::length(Self[T]) -> Int
#deprecated
fn[Component : Eq] Directory::op_equal(Self[Component], Self[Component]) -> Bool // from trait `Eq`
fn[T] Directory::op_get(Self[T], Int) -> T
fn[Component : ToJson] Directory::to_json(Self[Component]) -> Json // from trait `ToJson`
impl[Component : Eq] Eq for Directory[Component]
impl[Component : Hash] Hash for Directory[Component]
impl[Component : ToJson] ToJson for Directory[Component]

pub struct File[Component] {
  base : Component
  extension : String
}
fn[Component : Eq] File::equal(Self[Component], Self[Component]) -> Bool // from trait `Eq`
fn[Component : Hash] File::hash(Self[Component]) -> Int // from trait `Hash`
fn[Component : Hash] File::hash_combine(Self[Component], Hasher) -> Unit // from trait `Hash`
#deprecated
fn[Component : Eq] File::op_equal(Self[Component], Self[Component]) -> Bool // from trait `Eq`
fn[Component : ToJson] File::to_json(Self[Component]) -> Json // from trait `ToJson`
impl[Component : Eq] Eq for File[Component]
impl[Component : Hash] Hash for File[Component]
impl[Component : ToJson] ToJson for File[Component]

pub(all) enum Path {
  WPath(WinPath)
  UPath(UnixPath)
}
fn Path::equal(Self, Self) -> Bool // from trait `Eq`
fn Path::hash(Self) -> Int // from trait `Hash`
fn Path::hash_combine(Self, Hasher) -> Unit // from trait `Hash`
#deprecated
fn Path::op_equal(Self, Self) -> Bool // from trait `Eq`
fn Path::to_json(Self) -> Json // from trait `ToJson`
impl Eq for Path
impl Hash for Path
impl ToJson for Path

pub struct UnixPath {
  is_absolute : Bool
  directory : Directory[UnixPathComponent]
  file : File[UnixPathComponent]?
}
fn UnixPath::equal(Self, Self) -> Bool // from trait `Eq`
fn UnixPath::hash(Self) -> Int // from trait `Hash`
fn UnixPath::hash_combine(Self, Hasher) -> Unit // from trait `Hash`
#deprecated
fn UnixPath::op_equal(Self, Self) -> Bool // from trait `Eq`
fn UnixPath::to_json(Self) -> Json // from trait `ToJson`
impl Eq for UnixPath
impl Hash for UnixPath
impl ToJson for UnixPath

type UnixPathComponent
fn UnixPathComponent::equal(Self, Self) -> Bool // from trait `Eq`
fn UnixPathComponent::hash(Self) -> Int // from trait `Hash`
fn UnixPathComponent::hash_combine(Self, Hasher) -> Unit // from trait `Hash`
#deprecated
fn UnixPathComponent::op_equal(Self, Self) -> Bool // from trait `Eq`
fn UnixPathComponent::output(Self, &Logger) -> Unit // from trait `Show`
fn UnixPathComponent::to_json(Self) -> Json // from trait `ToJson`
fn UnixPathComponent::to_string(Self) -> String // from trait `Show`
impl PlatformPath for UnixPathComponent
impl Eq for UnixPathComponent
impl Hash for UnixPathComponent
impl Show for UnixPathComponent
impl ToJson for UnixPathComponent

pub struct WinPath {
  prefix : WinPrefix?
  directory : Directory[WinPathComponent]
  file : File[WinPathComponent]?
}
fn WinPath::equal(Self, Self) -> Bool // from trait `Eq`
fn WinPath::hash(Self) -> Int // from trait `Hash`
fn WinPath::hash_combine(Self, Hasher) -> Unit // from trait `Hash`
#deprecated
fn WinPath::op_equal(Self, Self) -> Bool // from trait `Eq`
fn WinPath::to_json(Self) -> Json // from trait `ToJson`
impl Eq for WinPath
impl Hash for WinPath
impl ToJson for WinPath

type WinPathComponent
fn WinPathComponent::equal(Self, Self) -> Bool // from trait `Eq`
fn WinPathComponent::hash(Self) -> Int // from trait `Hash`
fn WinPathComponent::hash_combine(Self, Hasher) -> Unit // from trait `Hash`
#deprecated
fn WinPathComponent::op_equal(Self, Self) -> Bool // from trait `Eq`
fn WinPathComponent::output(Self, &Logger) -> Unit // from trait `Show`
fn WinPathComponent::to_json(Self) -> Json // from trait `ToJson`
fn WinPathComponent::to_string(Self) -> String // from trait `Show`
impl PlatformPath for WinPathComponent
impl Eq for WinPathComponent
impl Hash for WinPathComponent
impl Show for WinPathComponent
impl ToJson for WinPathComponent

pub(all) enum WinPrefix {
  Verbatim(symlink~ : String)
  VerbatimUNC(hostname~ : String, shared_folder~ : String)
  VerbatimVolumeLetter(Char)
  VerbatimVolumeGUID(String)
  DeviceNS(device~ : String)
  UNC(hostname~ : String, shared_folder~ : String)
  VolumeLetter(Char)
}
fn WinPrefix::equal(Self, Self) -> Bool // from trait `Eq`
fn WinPrefix::hash(Self) -> Int // from trait `Hash`
fn WinPrefix::hash_combine(Self, Hasher) -> Unit // from trait `Hash`
#deprecated
fn WinPrefix::op_equal(Self, Self) -> Bool // from trait `Eq`
fn WinPrefix::to_json(Self) -> Json // from trait `ToJson`
impl Eq for WinPrefix
impl Hash for WinPrefix
impl ToJson for WinPrefix

// Type aliases
pub typealias Directory[UnixPathComponent] as UnixDirectory

pub typealias File[UnixPathComponent] as UnixFile

pub typealias Directory[WinPathComponent] as WinDirectory

pub typealias File[WinPathComponent] as WinFile

// Traits
trait PlatformPath

